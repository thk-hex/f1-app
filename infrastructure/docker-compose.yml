services:
  # PostgreSQL database
  db:
    container_name: f1_postgres_db
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: f1user
      POSTGRES_PASSWORD: f1password
      POSTGRES_DB: f1db
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U f1user -d f1db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis cache
  redis:
    container_name: f1_redis_cache
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  api:
    container_name: f1_backend_api
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: "postgresql://f1user:f1password@db:5432/f1db?schema=public"
      PORT: 3000
    env_file:
      - ../backend/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # pgAdmin
  pgadmin:
    container_name: f1_pgadmin
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - db

volumes:
  pgdata:
  redisdata: 